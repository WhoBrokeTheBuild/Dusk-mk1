Dusk::
	Program
	Graphics::
		Graphics.h
		GraphicsSystem
		GraphicsContext
		ShaderManager
		Model
		Texture
	Audio::
		Audio.h
		AudioSystem
		SoundEffect
		Music
	Input::
		Input.h
		InputSystem
		KeyboardManager
		MouseManager
		GamePadManager
	Math::
		Math.h
	Timing::
		Timer
		TimeInfo
	World::
		Scene
		Camera
		Entity

Dusk::Program
	public
		static Program Instance()
		bool init()

	private
		bool load()
		void start()
		
		GraphicsSystem 	mp_GraphicsSystem
		AudioSystem	mp_AudioSystem
		InputSystem	mp_InputSystem

Dusk::Graphics::GraphicsSystem
	public
		bool init( width, height, title, fullscreen )
		Window getWindow()
		GraphicsContext getContext() -> Window::getGraphicsContext()
		
		void swapBuffers()
	private
		Window		mp_Window


Dusk::Graphics::Window
	public
		bool init( width, height, title, fullscreen )

		GraphicsContext getGraphicsContext()

		get/set Width()
		get/set Height()
		get/set Title()

		bool isFullscreen()
		bool shouldClose()

		void resize( uint width, uint height )

	private
		GraphicsContext mp_GraphicsContext
		GLFWwindow	m_Window
		uint 		m_Width, m_Height
		string		m_Title
		bool		m_Fullscreen

Dusk::Graphics::GraphicsContext
	friend Window

	public
		bool bind()

	private
		GraphicsContext( GLFWwindow window )

Dusk::Graphics::ShaderManager
	public
		bool loadProgram( string name, uint count, GLShaderType type, cstring filename, .. )
		bool loadProgram( string name, uint count, ArrayList<GLShaderType> shaderTypes, ArrayList<string> shaderFilenames )

		void useProgram( string name )

		GLUniformLocation getUniformLocation( string uniform )
		GLUniformLocation getUniformLocation( string program, string uniform )

		void setUniform* ( GLUniformLocation location, * value )

	private
		void printProgramLog( GLProgram program )
		void printShaderLog( GLShader shader )
		
		GLShader loadShaderFromFile( string filename, GLShaderType type )

		void checkUniformError()

		Map<string, GLProgram> 				m_Programs
		Map<string, Map<string, GLUniformLocation>> 	m_UniformLocations
		GLProgram 					m_CurrentProgram
		string						m_CurrentProgramName

Dusk::Graphics::Texture
	public
		bool load( string filename )

		bool bind()

		get/set Width()
		get/set Height()

	private
		GLTexture	m_Texture
		uint		m_Width, m_Height


Dusk::Graphics::Model
	public
		bool load( string filename )

Dusk::World::Camera
	public 
		bool init( float width, float height,
			   vec3 pos, vec3 dir, vec3 up,
			   float fov, float near, float far )

		void lookAt( vec3 center )
		void resize( float width, float height )

		get/set Pos()
		get/set Dir()
		get/set Up()

		vec3 getLeft()
		vec3 getRight()

		float getPitch()
		float getYaw()
		void changePitch( float amount )
		void changeYaw( float amount )

		get/set FOV()
		get/set Near()
		get/set Far()

		void setPerspective( float fov, float width, float height, float near, float far )
		
		mat4 getViewMatrix()
		mat4 getProjectionMatrix()

	private
		
		bool 	m_ProjectionMatrixUpdated

		float	m_FOV, 
			m_AspectWidth, m_AspectHeight, 
			m_Near, m_Far,
			m_Pitch, m_Yaw

		mat4	m_View, m_Proj

		vec3	m_Pos, m_Dir, m_Up, m_LookAt

		quat	m_Orientation






